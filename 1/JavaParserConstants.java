/* Generated By:JavaCC: Do not edit this line. JavaParserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_CONSTANT = 5;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 6;
  /** RegularExpression Id. */
  int EXPONENT = 7;
  /** RegularExpression Id. */
  int LOGIC_CONSTANT = 8;
  /** RegularExpression Id. */
  int STRING_CONSTANT = 9;
  /** RegularExpression Id. */
  int DIGIT = 10;
  /** RegularExpression Id. */
  int NOT = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int END = 13;
  /** RegularExpression Id. */
  int SUB = 14;
  /** RegularExpression Id. */
  int LET = 15;
  /** RegularExpression Id. */
  int CALL = 16;
  /** RegularExpression Id. */
  int THEN = 17;
  /** RegularExpression Id. */
  int CASE = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int INPUT = 20;
  /** RegularExpression Id. */
  int SELECT = 21;
  /** RegularExpression Id. */
  int STATIC = 22;
  /** RegularExpression Id. */
  int CLASS = 23;
  /** RegularExpression Id. */
  int PUBLIC = 24;
  /** RegularExpression Id. */
  int VOID = 25;
  /** RegularExpression Id. */
  int MAIN = 26;
  /** RegularExpression Id. */
  int EXTENDS = 27;
  /** RegularExpression Id. */
  int PRINT = 28;
  /** RegularExpression Id. */
  int WHILE = 29;
  /** RegularExpression Id. */
  int NEW = 30;
  /** RegularExpression Id. */
  int THIS = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int TYPE = 33;
  /** RegularExpression Id. */
  int STRING = 34;
  /** RegularExpression Id. */
  int IDENTIFIER = 35;
  /** RegularExpression Id. */
  int LETTER = 36;
  /** RegularExpression Id. */
  int PLUS = 37;
  /** RegularExpression Id. */
  int MINUS = 38;
  /** RegularExpression Id. */
  int TIMES = 39;
  /** RegularExpression Id. */
  int DIVIDE = 40;
  /** RegularExpression Id. */
  int EQUALS = 41;
  /** RegularExpression Id. */
  int OPEN_PAR = 42;
  /** RegularExpression Id. */
  int CLOSE_PAR = 43;
  /** RegularExpression Id. */
  int OPEN_BRACE = 44;
  /** RegularExpression Id. */
  int CLOSE_BRACE = 45;
  /** RegularExpression Id. */
  int OPEN_BRACKET = 46;
  /** RegularExpression Id. */
  int CLOSE_BRACKET = 47;
  /** RegularExpression Id. */
  int SEMI_COLON = 48;
  /** RegularExpression Id. */
  int COMMA = 49;
  /** RegularExpression Id. */
  int OPERATOR = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<INTEGER_CONSTANT>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<LOGIC_CONSTANT>",
    "<STRING_CONSTANT>",
    "<DIGIT>",
    "\"not\"",
    "\"if\"",
    "\"end\"",
    "\"sub\"",
    "\"let\"",
    "\"call\"",
    "\"then\"",
    "\"case\"",
    "\"else\"",
    "\"input\"",
    "\"select\"",
    "\"static\"",
    "\"class\"",
    "\"public\"",
    "\"void\"",
    "\"main\"",
    "\"extends\"",
    "\"System.out.println\"",
    "\"while\"",
    "\"new\"",
    "\"this\"",
    "\"return\"",
    "<TYPE>",
    "\"String\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "<OPERATOR>",
    "\"!\"",
  };

}
